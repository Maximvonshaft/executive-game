openapi: 3.0.3
info:
  title: Practice Card Games Realtime API
  version: 0.2.0
  description: |
    Phase 1 在 Phase 0 登录基础上，新增大厅/匹配/房间接口及五子棋实时对局契约。
servers:
  - url: https://dev.api.practice-card.games
    description: 开发环境
  - url: https://staging.api.practice-card.games
    description: 预发布环境
  - url: https://api.practice-card.games
    description: 生产环境
paths:
  /api/auth/telegram:
    post:
      summary: 使用 Telegram WebApp initData 登录
      operationId: loginWithTelegram
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - initData
              properties:
                initData:
                  type: string
                  description: Telegram WebApp initData string（未经 decodeURIComponent）
                device:
                  type: object
                  description: 客户端可选上报的设备信息
                  properties:
                    platform:
                      type: string
                      example: ios
                    version:
                      type: string
                      example: "1.0.0"
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccess'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 登录凭证无效或过期
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/games:
    get:
      summary: 列出可用游戏
      operationId: listGames
      tags:
        - lobby
      responses:
        '200':
          description: 游戏列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      games:
                        type: array
                        items:
                          $ref: '#/components/schemas/Game'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/match/start:
    post:
      summary: 发起匹配
      operationId: startMatch
      tags:
        - match
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                gameId:
                  type: string
                  description: 默认 `gomoku`
                  example: gomoku
      responses:
        '200':
          description: 匹配队列受理
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      ticket:
                        $ref: '#/components/schemas/MatchTicket'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 玩家已在对局或其他冲突
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/match/cancel:
    post:
      summary: 取消匹配
      operationId: cancelMatch
      tags:
        - match
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ticketId
              properties:
                ticketId:
                  type: string
      responses:
        '200':
          description: 取消成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      cancelled:
                        type: boolean
                        example: true
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ticket 不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: ticket 已生成房间
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/rooms:
    get:
      summary: 查询玩家关联房间
      operationId: listRooms
      tags:
        - rooms
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 房间列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      rooms:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoomState'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/rooms/join:
    post:
      summary: 获取房间快照（并触发 WebSocket 订阅）
      operationId: joinRoom
      tags:
        - rooms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roomId
              properties:
                roomId:
                  type: string
      responses:
        '200':
          description: 返回房间状态
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      room:
                        $ref: '#/components/schemas/RoomState'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 非房间成员
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 房间不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: AUTH_INVALID_SIGNATURE
            message:
              type: string
              example: 登录状态已失效，请重新登录。
            details:
              type: object
              nullable: true
    AuthSuccess:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            token:
              type: string
            expiresIn:
              type: integer
            issuedAt:
              type: integer
            user:
              type: object
              nullable: true
              properties:
                id:
                  type: integer
                firstName:
                  type: string
                lastName:
                  type: string
                username:
                  type: string
                languageCode:
                  type: string
                photoUrl:
                  type: string
    Game:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        minPlayers:
          type: integer
        maxPlayers:
          type: integer
        turnOrder:
          type: string
        rulesVersion:
          type: string
        metadata:
          type: object
          properties:
            boardSize:
              type: integer
            firstMove:
              type: string
            timeLimitSeconds:
              type: integer
    MatchTicket:
      type: object
      properties:
        ticketId:
          type: string
        status:
          type: string
          enum:
            - waiting
            - matched
        gameId:
          type: string
        roomId:
          type: string
          nullable: true
        createdAt:
          type: integer
        matchedAt:
          type: integer
          nullable: true
    RoomState:
      type: object
      properties:
        roomId:
          type: string
        gameId:
          type: string
        status:
          type: string
          enum:
            - waiting
            - active
            - finished
        players:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              seat:
                type: integer
              stone:
                type: string
                enum:
                  - black
                  - white
              ready:
                type: boolean
        sequence:
          type: integer
        board:
          type: array
          nullable: true
          items:
            type: array
            items:
              type: string
              nullable: true
        moves:
          type: array
          items:
            type: object
            properties:
              x:
                type: integer
              y:
                type: integer
              stone:
                type: string
                enum:
                  - black
                  - white
        result:
          type: object
          nullable: true
          properties:
            winnerId:
              type: string
              nullable: true
            reason:
              type: string
            winningLine:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  x:
                    type: integer
                  y:
                    type: integer
        nextTurnPlayerId:
          type: string
          nullable: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
