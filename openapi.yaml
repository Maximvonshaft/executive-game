openapi: 3.0.3
info:
  title: Practice Card Games Realtime API
  version: 0.6.0
  description: |
    Phase 5 在社交能力基础上，引入 AI 局面建议、练习频控与提示缓存，支撑练习模式与陪练体验。
servers:
  - url: https://dev.api.practice-card.games
    description: 开发环境
  - url: https://staging.api.practice-card.games
    description: 预发布环境
  - url: https://api.practice-card.games
    description: 生产环境
paths:
  /internal/replay/{roomId}:
    get:
      summary: 查询房间审计回放
      description: 内部只读接口，返回指定房间的事件哈希链与重放所需信息。
      tags:
        - internal
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 返回审计回放数据
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      replay:
                        $ref: '#/components/schemas/AuditReplay'
        '404':
          description: 未找到回放记录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/auth/telegram:
    post:
      summary: 使用 Telegram WebApp initData 登录
      operationId: loginWithTelegram
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - initData
              properties:
                initData:
                  type: string
                  description: Telegram WebApp initData string（未经 decodeURIComponent）
                device:
                  type: object
                  description: 客户端可选上报的设备信息
                  properties:
                    platform:
                      type: string
                      example: ios
                    version:
                      type: string
                      example: "1.0.0"
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccess'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 登录凭证无效或过期
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/games:
    get:
      summary: 列出可用游戏
      operationId: listGames
      tags:
        - lobby
      responses:
        '200':
          description: 游戏列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      games:
                        type: array
                        items:
                          $ref: '#/components/schemas/Game'
  /api/leaderboard:
    get:
      summary: 查询排行榜
      operationId: getLeaderboard
      tags:
        - progression
      parameters:
        - in: query
          name: scope
          required: false
          schema:
            type: string
            enum:
              - overall
              - weekly
              - monthly
              - 7d
              - 30d
          description: 排行榜窗口（overall=总榜，weekly=近7天，monthly=近30天）
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: 返回条目上限，默认 50
      responses:
        '200':
          description: 排行榜数据
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      leaderboard:
                        $ref: '#/components/schemas/Leaderboard'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/profile/{id}:
    get:
      summary: 查询玩家资料卡
      operationId: getProfile
      tags:
        - progression
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 玩家资料卡
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      profile:
                        $ref: '#/components/schemas/Profile'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/games/{id}/meta:
    get:
      summary: 获取指定游戏的元数据
      operationId: getGameMeta
      tags:
        - lobby
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 游戏元数据
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      game:
                        $ref: '#/components/schemas/GameMeta'
        '404':
          description: 游戏不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/match/start:
    post:
      summary: 发起匹配
      operationId: startMatch
      tags:
        - match
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                gameId:
                  type: string
                  description: 默认 `gomoku`
                  example: gomoku
      responses:
        '200':
          description: 匹配队列受理
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      ticket:
                        $ref: '#/components/schemas/MatchTicket'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 玩家已在对局或其他冲突
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/match/cancel:
    post:
      summary: 取消匹配
      operationId: cancelMatch
      tags:
        - match
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ticketId
              properties:
                ticketId:
                  type: string
      responses:
        '200':
          description: 取消成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      cancelled:
                        type: boolean
                        example: true
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ticket 不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: ticket 已生成房间
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/rooms:
    get:
      summary: 查询玩家关联房间
      operationId: listRooms
      tags:
        - rooms
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 返回玩家参与与观战的房间列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      rooms:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoomState'
                      spectating:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoomState'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: 管理私密房（创建/配置/离开/踢人）
      operationId: mutateRoom
      tags:
        - rooms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                    - create
                    - kick
                    - leave
                    - update
                  default: create
                gameId:
                  type: string
                  description: 创建房间时的游戏 ID
                roomId:
                  type: string
                  description: 目标房间 ID
                targetPlayerId:
                  type: string
                  description: 踢人操作的目标玩家 ID
                allowSpectators:
                  type: boolean
                  description: 是否允许观战
                spectatorDelayMs:
                  type: integer
                  description: 观战事件延迟毫秒数
                spectatorLimit:
                  type: integer
                  description: 最大观战人数
      responses:
        '200':
          description: 返回房间或更新后的房间列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      room:
                        $ref: '#/components/schemas/RoomState'
                      rooms:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoomState'
                      spectating:
                        type: array
                        items:
                          $ref: '#/components/schemas/RoomState'
        '400':
          description: 请求体不合法
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 操作权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/rooms/join:
    post:
      summary: 获取房间快照（并触发 WebSocket 订阅）
      operationId: joinRoom
      tags:
        - rooms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: 房间 ID
                inviteCode:
                  type: string
                  description: 私密房邀请码（可替代 roomId）
                sinceSeq:
                  type: integer
                  description: 需要补齐的事件序号
                asSpectator:
                  type: boolean
                  description: 是否以观战身份加入
      responses:
        '200':
          description: 返回房间状态
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      room:
                        $ref: '#/components/schemas/RoomState'
                      role:
                        type: string
                        enum:
                          - player
                          - spectator
                      spectator:
                        type: object
                        nullable: true
                        properties:
                          delayMs:
                            type: integer
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 非房间成员
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 房间不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/friends:
    get:
      summary: 查询好友、屏蔽与最近对手
      operationId: listFriends
      tags:
        - social
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 返回社交关系
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      friends:
                        type: array
                        items:
                          $ref: '#/components/schemas/FriendEntry'
                      blocked:
                        type: array
                        items:
                          $ref: '#/components/schemas/FriendEntry'
                      recentOpponents:
                        type: array
                        items:
                          $ref: '#/components/schemas/RecentOpponent'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: 更新好友或屏蔽关系
      operationId: updateFriends
      tags:
        - social
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                    - add
                    - remove
                    - block
                    - unblock
                  default: add
                playerId:
                  type: string
                  description: 目标玩家 ID
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      result:
                        type: object
                        additionalProperties: true
                      overview:
                        type: object
                        properties:
                          friends:
                            type: array
                            items:
                              $ref: '#/components/schemas/FriendEntry'
                          blocked:
                            type: array
                            items:
                              $ref: '#/components/schemas/FriendEntry'
                          recentOpponents:
                            type: array
                            items:
                              $ref: '#/components/schemas/RecentOpponent'
        '400':
          description: 请求体不合法
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 操作被拒绝
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/tasks/today:
    get:
      summary: 获取当日任务列表
      operationId: getTodayTasks
      tags:
        - progression
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 返回任务状态
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      tasks:
                        type: array
                        items:
                          $ref: '#/components/schemas/TaskEntry'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/tasks/{id}/claim:
    post:
      summary: 领取任务奖励
      operationId: claimTask
      tags:
        - progression
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 领取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      claim:
                        $ref: '#/components/schemas/TaskClaim'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 任务不存在或不可领取
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 任务未完成或已领取
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/ai/suggest:
    post:
      summary: 请求 AI 落子建议
      operationId: requestAiSuggestion
      tags:
        - ai
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiSuggestionRequest'
      responses:
        '200':
          description: 返回启发式分析建议
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      suggestion:
                        $ref: '#/components/schemas/AiSuggestion'
        '400':
          description: 请求参数错误或局面非法
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未登录
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: 请求过于频繁
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 服务端异常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: AUTH_INVALID_SIGNATURE
            message:
              type: string
              example: 登录状态已失效，请重新登录。
            details:
              type: object
              nullable: true
    AuthSuccess:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            token:
              type: string
            expiresIn:
              type: integer
            issuedAt:
              type: integer
            user:
              type: object
              nullable: true
              properties:
                id:
                  type: integer
                firstName:
                  type: string
                lastName:
                  type: string
                username:
                  type: string
                languageCode:
                  type: string
                photoUrl:
                  type: string
    Game:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        genre:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        minPlayers:
          type: integer
        maxPlayers:
          type: integer
        matchPlayers:
          type: integer
        turnOrder:
          type: string
        rulesVersion:
          type: string
        assets:
          type: object
          additionalProperties:
            type: string
        metadata:
          type: object
          additionalProperties:
            oneOf:
              - type: string
              - type: integer
              - type: number
              - type: boolean
    GameMeta:
      allOf:
        - $ref: '#/components/schemas/Game'
        - type: object
          properties:
            summary:
              type: string
            seats:
              type: array
              items:
                type: object
                additionalProperties: true
            flow:
              type: array
              items:
                type: string
            ui:
              type: object
              additionalProperties:
                type: string
    MatchTicket:
      type: object
      properties:
        ticketId:
          type: string
        status:
          type: string
          enum:
            - waiting
            - matched
        gameId:
          type: string
        roomId:
          type: string
          nullable: true
        createdAt:
          type: integer
        matchedAt:
          type: integer
          nullable: true
    AuditEvent:
      type: object
      properties:
        sequence:
          type: integer
        type:
          type: string
        payload:
          type: object
          additionalProperties: true
        timestamp:
          type: integer
          format: int64
        prevHash:
          type: string
        hash:
          type: string
    AuditReplay:
      type: object
      properties:
        roomId:
          type: string
        gameId:
          type: string
        createdAt:
          type: integer
          format: int64
        completedAt:
          type: integer
          format: int64
          nullable: true
        ownerId:
          type: string
          nullable: true
        visibility:
          type: string
          enum:
            - public
            - private
        players:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              seat:
                type: integer
              attributes:
                type: object
                additionalProperties: true
        finalResult:
          type: object
          nullable: true
          additionalProperties: true
        integrity:
          type: object
          properties:
            tailHash:
              type: string
            eventCount:
              type: integer
        events:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
    RoomState:
      type: object
      properties:
        roomId:
          type: string
        gameId:
          type: string
        status:
          type: string
          enum:
            - waiting
            - active
            - finished
        visibility:
          type: string
          enum:
            - public
            - private
        ownerId:
          type: string
          nullable: true
        allowSpectators:
          type: boolean
        spectatorCount:
          type: integer
        spectatorLimit:
          type: integer
        spectatorDelayMs:
          type: integer
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        players:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              seat:
                type: integer
              stone:
                type: string
                enum:
                  - black
                  - white
              ready:
                type: boolean
        sequence:
          type: integer
        state:
          type: object
          additionalProperties: true
        board:
          type: array
          nullable: true
          items:
            type: array
            items:
              type: string
              nullable: true
        moves:
          type: array
          items:
            type: object
            properties:
              x:
                type: integer
              y:
                type: integer
              stone:
                type: string
                enum:
                  - black
                  - white
        result:
          type: object
          nullable: true
          properties:
            winnerId:
              type: string
              nullable: true
            reason:
              type: string
            winningLine:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  x:
                    type: integer
                  y:
                    type: integer
        nextTurnPlayerId:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
          enum:
            - player
            - spectator
        inviteCode:
          type: string
          nullable: true
          description: 仅房主可见的私密房邀请码
    FriendEntry:
      type: object
      properties:
        playerId:
          type: string
    RecentOpponent:
      type: object
      properties:
        playerId:
          type: string
        gameId:
          type: string
        roomId:
          type: string
          nullable: true
        lastPlayedAt:
          type: integer
          format: int64
    Leaderboard:
      type: object
      properties:
        scope:
          type: string
          enum:
            - overall
            - weekly
            - monthly
        generatedAt:
          type: integer
        totalPlayers:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardEntry'
    LeaderboardEntry:
      type: object
      properties:
        rank:
          type: integer
        playerId:
          type: string
        rating:
          type: integer
        deviation:
          type: integer
        tier:
          type: string
        winRate:
          type: number
          format: float
        wins:
          type: integer
        losses:
          type: integer
        lastActiveAt:
          type: integer
          nullable: true
    Profile:
      type: object
      properties:
        playerId:
          type: string
        rating:
          type: object
          properties:
            value:
              type: number
            deviation:
              type: number
            volatility:
              type: number
            tier:
              type: string
            best:
              type: number
        stats:
          type: object
          properties:
            totalMatches:
              type: integer
            wins:
              type: integer
            losses:
              type: integer
            draws:
              type: integer
            winRate:
              type: number
              format: float
            winStreak:
              type: integer
            bestWinStreak:
              type: integer
        history:
          type: array
          items:
            $ref: '#/components/schemas/ProfileHistoryEntry'
        achievements:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              earnedAt:
                type: integer
        currencies:
          type: object
          properties:
            coins:
              type: integer
        createdAt:
          type: integer
        lastActiveAt:
          type: integer
          nullable: true
        shareCard:
          type: object
          nullable: true
          properties:
            headline:
              type: string
            subline:
              type: string
            highlight:
              type: object
              nullable: true
              properties:
                gameId:
                  type: string
                result:
                  type: string
                delta:
                  type: number
    ProfileHistoryEntry:
      type: object
      properties:
        matchId:
          type: string
        roomId:
          type: string
        gameId:
          type: string
        result:
          type: string
          enum:
            - win
            - loss
            - draw
        ratingBefore:
          type: number
        ratingAfter:
          type: number
        ratingDelta:
          type: number
        opponents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              seat:
                type: integer
              attributes:
                type: object
                additionalProperties: true
        playedAt:
          type: integer
        reason:
          type: string
          nullable: true
    TaskEntry:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
        progress:
          type: integer
        goal:
          type: integer
        completed:
          type: boolean
        claimed:
          type: boolean
        reward:
          type: object
          additionalProperties:
            type: integer
        updatedAt:
          type: integer
        expiresAt:
          type: integer
    TaskClaim:
      type: object
      properties:
        taskId:
          type: string
        reward:
          type: object
          additionalProperties:
            type: integer
    BoardPosition:
      type: object
      properties:
        x:
          type: integer
          minimum: 0
        y:
          type: integer
          minimum: 0
      required:
        - x
        - y
    AiMoveInput:
      type: object
      description: 练习局面传入的历史落子，`player` 与 `playerIndex` 任选其一。
      properties:
        x:
          type: integer
          minimum: 0
          maximum: 14
        y:
          type: integer
          minimum: 0
          maximum: 14
        player:
          type: string
          nullable: true
          enum:
            - black
            - white
        playerIndex:
          type: integer
          nullable: true
          enum:
            - 0
            - 1
      required:
        - x
        - y
    AiRecordedMove:
      type: object
      properties:
        x:
          type: integer
        y:
          type: integer
        player:
          type: string
          enum:
            - black
            - white
      required:
        - x
        - y
        - player
    AiPosition:
      type: object
      properties:
        board:
          type: array
          items:
            type: array
            items:
              type: string
              nullable: true
              enum:
                - black
                - white
        moves:
          type: array
          items:
            $ref: '#/components/schemas/AiRecordedMove'
      required:
        - board
        - moves
    AiPreview:
      type: object
      nullable: true
      properties:
        type:
          type: string
          enum:
            - win_path
            - block
        winningLine:
          type: array
          items:
            $ref: '#/components/schemas/BoardPosition'
        threat:
          type: object
          nullable: true
          properties:
            coordinate:
              type: string
            position:
              $ref: '#/components/schemas/BoardPosition'
            winningLine:
              type: array
              items:
                $ref: '#/components/schemas/BoardPosition'
    AiEvaluation:
      type: object
      properties:
        stance:
          type: string
          enum:
            - advantage
            - balanced
            - danger
            - finished
        longestLine:
          type: object
          properties:
            self:
              type: integer
            opponent:
              type: integer
        opponentThreats:
          type: array
          items:
            type: object
            properties:
              coordinate:
                type: string
              position:
                $ref: '#/components/schemas/BoardPosition'
        summary:
          type: string
    AiRecommendedMove:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/BoardPosition'
        coordinate:
          type: string
          example: H7
        score:
          type: number
        categories:
          type: array
          items:
            type: string
        metrics:
          type: object
          properties:
            longestLine:
              type: integer
            openEnds:
              type: integer
        preview:
          $ref: '#/components/schemas/AiPreview'
        explanation:
          type: string
      required:
        - position
        - coordinate
        - score
        - categories
        - metrics
        - explanation
    AiSuggestion:
      type: object
      properties:
        gameId:
          type: string
        mode:
          type: string
          example: practice
        cached:
          type: boolean
        generatedAt:
          type: integer
          format: int64
        nextPlayer:
          type: string
          enum:
            - black
            - white
        position:
          $ref: '#/components/schemas/AiPosition'
        evaluation:
          $ref: '#/components/schemas/AiEvaluation'
        recommendedMoves:
          type: array
          items:
            $ref: '#/components/schemas/AiRecommendedMove'
      required:
        - gameId
        - mode
        - cached
        - generatedAt
        - nextPlayer
        - position
        - evaluation
        - recommendedMoves
    AiSuggestionRequest:
      type: object
      properties:
        gameId:
          type: string
          default: gomoku
        moves:
          type: array
          items:
            $ref: '#/components/schemas/AiMoveInput'
        limit:
          type: integer
          minimum: 1
          maximum: 5
        mode:
          type: string
          enum:
            - practice
            - analysis
            - review
        nextPlayer:
          type: string
          nullable: true
          enum:
            - black
            - white
        position:
          type: object
          nullable: true
          properties:
            moves:
              type: array
              items:
                $ref: '#/components/schemas/AiMoveInput'
            nextPlayer:
              type: string
              nullable: true
              enum:
                - black
                - white
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
